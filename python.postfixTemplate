.enumerate : Enumerate value
	ANY   →   enumerate($expr$)

.reversed : Reverse iterable
	ANY   →   reversed($expr$)

.list : Convert iterable to list
	ANY   →   list($expr$)$END$

.set : Convert iterable to set
	ANY   →   set($expr$)$END$

.tuple: Convert iterable to tuple
	ANY   →   tuple($expr$)$END$

.sort : Sort iterable
	ANY   →   sort($expr$)$END$

.sortk : Sort iterable with key
	ANY   →   sort($expr$, key=$key$)$END$

.sortl : Sort iterable with lambda key
	ANY   →   sort($expr$, key=lambda x: $key$)$END$

.filter : Filter iterable
	ANY   →   filter($first$, $expr$)$END$

.filterl : Filter iterable with lambda
	ANY   →   filter(lambda x: $first$, $expr$)$END$

.map : Map iterable
	ANY   →   map($first$, $expr$)$END$

.mapl : Map iterable with lambda
	ANY   →   map(lambda x: $first$, $expr$)$END$

.open : Open a path
	ANY   →   with open($expr$) as $file_name$:\
    $END$

.openm : Open a path with mode
	ANY   →   with open($expr$, mode='$mode$') as $file_name$:\
    $END$

.openp : Open a Path object
	ANY   →   with closing($expr$.open()) as $file_name$:\
    $END$

.for : Iterate through an object
	ANY   →   for $var$ in $expr$:\
    $END$

.try : Wrap with try except
	ANY   →   try:\
    $expr$\
except $error$ as $error_var$:\
    $END$

.tryf : Wrap with try except and finally
	ANY   →   try:\
    $expr$\
except $error$ as $error_var$:\
    $except$\
finally:\
    $END$
